// AUTOGENERATED: 17660767ad653a68c7b9bf3985f3d09a
// AUTOGENERATED: Please feel free to enhance this sourcecode manually 
// AUTOGENERATED: (for example by adding more structure or convenience methods), and
// AUTOGENERATED: do not forget to remove this comment, especially the very first line so your changes are not overridden
package de.kalass.sonoscontrol.clingimpl.services;

import de.kalass.sonoscontrol.api.services.GroupManagementService;
import org.testng.Assert;
import org.testng.annotations.Test;

import de.kalass.sonoscontrol.api.core.VoidCallback;
import de.kalass.sonoscontrol.api.core.AsyncValue;
import de.kalass.sonoscontrol.api.control.SonosDevice;
import de.kalass.sonoscontrol.clingimpl.AbstractSonosServiceTest;

import de.kalass.sonoscontrol.api.core.Callback0;
import de.kalass.sonoscontrol.api.core.Callback1;
import de.kalass.sonoscontrol.api.model.groupmanagement.AddMemberResult;
import de.kalass.sonoscontrol.api.model.groupmanagement.LocalGroupUUID;
import de.kalass.sonoscontrol.api.model.groupmanagement.ResetVolumeAfter;
import de.kalass.sonoscontrol.api.model.MemberID;
import de.kalass.sonoscontrol.api.model.groupmanagement.GroupCoordinatorIsLocal;
import de.kalass.sonoscontrol.api.model.groupmanagement.VolumeAVTransportURI;
import de.kalass.sonoscontrol.api.model.groupmanagement.BufferingResultCode;
import de.kalass.sonoscontrol.api.model.groupmanagement.TransportSettings;

public class GroupManagementServiceTest extends AbstractSonosServiceTest<GroupManagementService> {

    @Override
    protected GroupManagementService extractService(SonosDevice device) {
        return device.getGroupManagementService();
    }

  @Override
    protected String getServiceName() {
        return "GroupManagementService";
    }
    
    @Test
    public void testGetLocalGroupUUID() {
        final LocalGroupUUID value = getService().getLastValueForLocalGroupUUID();
        Assert.assertNotNull(value);
        System.out.println("Got LocalGroupUUID: " + value);
    }
    @Test
    public void testGetResetVolumeAfter() {
        final ResetVolumeAfter value = getService().getLastValueForResetVolumeAfter();
        Assert.assertNotNull(value);
        System.out.println("Got ResetVolumeAfter: " + value);
    }
    @Test
    public void testGetGroupCoordinatorIsLocal() {
        final GroupCoordinatorIsLocal value = getService().getLastValueForGroupCoordinatorIsLocal();
        Assert.assertNotNull(value);
        System.out.println("Got GroupCoordinatorIsLocal: " + value);
    }
    @Test
    public void testGetVolumeAVTransportURI() {
        final VolumeAVTransportURI value = getService().getLastValueForVolumeAVTransportURI();
        Assert.assertNotNull(value);
        System.out.println("Got VolumeAVTransportURI: " + value);
    }


    /*
    @Test
    public void addMemberTest() throws Exception{
        final AddMemberResult value = getService().addMember(memberID, new AsyncValue<AddMemberResult>()).get();
        Assert.assertNotNull(value);
        System.out.println("Got addMember: " + value);
    }
    */

    /*
    @Test
    public void removeMemberTest() throws Exception{
        getService().removeMember(memberID, new VoidCallback()).waitForSuccess();
        System.out.println("Finished removeMember");
    }
    */

    /*
    @Test
    public void reportTrackBufferingResultTest() throws Exception{
        getService().reportTrackBufferingResult(memberID, resultCode, new VoidCallback()).waitForSuccess();
        System.out.println("Finished reportTrackBufferingResult");
    }
    */
}

