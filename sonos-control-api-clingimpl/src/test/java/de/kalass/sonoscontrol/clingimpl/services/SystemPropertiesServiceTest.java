// AUTOGENERATED: 868c23758bb2849fdf6009eb10363051
// AUTOGENERATED: Please feel free to enhance this sourcecode manually 
// AUTOGENERATED: (for example by adding more structure or convenience methods), and
// AUTOGENERATED: do not forget to remove this comment, especially the very first line so your changes are not overridden
package de.kalass.sonoscontrol.clingimpl.services;

import de.kalass.sonoscontrol.api.services.SystemPropertiesService;
import org.testng.Assert;
import org.testng.annotations.Test;

import de.kalass.sonoscontrol.api.core.VoidCallback;
import de.kalass.sonoscontrol.api.core.AsyncValue;
import de.kalass.sonoscontrol.api.control.SonosDevice;
import de.kalass.sonoscontrol.clingimpl.AbstractSonosServiceTest;

import de.kalass.sonoscontrol.api.core.Callback0;
import de.kalass.sonoscontrol.api.core.Callback1;
import de.kalass.sonoscontrol.api.model.systemproperties.VariableStringValue;
import de.kalass.sonoscontrol.api.model.systemproperties.IsExpired;
import de.kalass.sonoscontrol.api.model.systemproperties.AccountID;
import de.kalass.sonoscontrol.api.model.systemproperties.VariableName;
import de.kalass.sonoscontrol.api.model.systemproperties.AccountMd;
import de.kalass.sonoscontrol.api.model.systemproperties.AccountType;
import de.kalass.sonoscontrol.api.model.systemproperties.StubsCreated;
import de.kalass.sonoscontrol.api.model.systemproperties.AccountPassword;

public class SystemPropertiesServiceTest extends AbstractSonosServiceTest<SystemPropertiesService> {

    @Override
    protected SystemPropertiesService extractService(SonosDevice device) {
        return device.getSystemPropertiesService();
    }

  @Override
    protected String getServiceName() {
        return "SystemPropertiesService";
    }
    


    /*
    @Test
    public void setStringTest() throws Exception{
        getService().setString(variableName, stringValue, new VoidCallback()).waitForSuccess();
        System.out.println("Finished setString");
    }
    */

    /*
    @Test
    public void retrieveStringTest() throws Exception{
        final VariableStringValue value = getService().retrieveString(variableName, new AsyncValue<VariableStringValue>()).get();
        Assert.assertNotNull(value);
        System.out.println("Got retrieveString: " + value);
    }
    */

    /*
    @Test
    public void removeTest() throws Exception{
        getService().remove(variableName, new VoidCallback()).waitForSuccess();
        System.out.println("Finished remove");
    }
    */

    /*
    @Test
    public void retrieveWebCodeTest() throws Exception{
        final VariableStringValue value = getService().retrieveWebCode(accountType, new AsyncValue<VariableStringValue>()).get();
        Assert.assertNotNull(value);
        System.out.println("Got retrieveWebCode: " + value);
    }
    */

    /*
    @Test
    public void provisionTrialAccountTest() throws Exception{
        getService().provisionTrialAccount(accountType, new VoidCallback()).waitForSuccess();
        System.out.println("Finished provisionTrialAccount");
    }
    */

    /*
    @Test
    public void provisionCredentialedTrialAccountTest() throws Exception{
        final IsExpired value = getService().provisionCredentialedTrialAccount(accountType, accountID, accountPassword, new AsyncValue<IsExpired>()).get();
        Assert.assertNotNull(value);
        System.out.println("Got provisionCredentialedTrialAccount: " + value);
    }
    */

    /*
    @Test
    public void migrateTrialAccountTest() throws Exception{
        getService().migrateTrialAccount(targetAccountType, targetAccountID, targetAccountPassword, new VoidCallback()).waitForSuccess();
        System.out.println("Finished migrateTrialAccount");
    }
    */

    /*
    @Test
    public void addAccountTest() throws Exception{
        getService().addAccount(accountType, accountID, accountPassword, new VoidCallback()).waitForSuccess();
        System.out.println("Finished addAccount");
    }
    */

    /*
    @Test
    public void removeAccountTest() throws Exception{
        getService().removeAccount(accountType, accountID, new VoidCallback()).waitForSuccess();
        System.out.println("Finished removeAccount");
    }
    */

    /*
    @Test
    public void editAccountPasswordTest() throws Exception{
        getService().editAccountPassword(accountType, accountID, newAccountPassword, new VoidCallback()).waitForSuccess();
        System.out.println("Finished editAccountPassword");
    }
    */

    /*
    @Test
    public void editAccountMdTest() throws Exception{
        getService().editAccountMd(accountType, accountID, newAccountMd, new VoidCallback()).waitForSuccess();
        System.out.println("Finished editAccountMd");
    }
    */

    /*
    @Test
    public void doPostUpdateTasksTest() throws Exception{
        getService().doPostUpdateTasks(new VoidCallback()).waitForSuccess();
        System.out.println("Finished doPostUpdateTasks");
    }
    */

    /*
    @Test
    public void resetThirdPartyCredentialsTest() throws Exception{
        getService().resetThirdPartyCredentials(new VoidCallback()).waitForSuccess();
        System.out.println("Finished resetThirdPartyCredentials");
    }
    */
}

