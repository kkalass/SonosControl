// AUTOGENERATED: 103c14647f934108e5d4ef740bcc0d5d
// AUTOGENERATED: 09.01.2012 12:49:21
// AUTOGENERATED: Please feel free to enhance this sourcecode manually 
// AUTOGENERATED: (for example by adding more structure or convenience methods), and
// AUTOGENERATED: do not forget to remove this comment, especially the very first line so your changes are not overridden
package de.kalass.sonoscontrol.api.model.avtransport;

import com.google.common.base.Objects;
import java.io.Serializable;


public final class GetMediaInfoResult implements Serializable {
    private static final long serialVersionUID = 1L;

    private final NumberOfTracks _nrTracks;
    private final CurrentMediaDuration _mediaDuration;
    private final AVTransportURI _currentURI;
    private final AVTransportURIMetaData _currentURIMetaData;
    private final NextAVTransportURI _nextURI;
    private final NextAVTransportURIMetaData _nextURIMetaData;
    private final PlaybackStorageMedium _playMedium;
    private final RecordStorageMedium _recordMedium;
    private final RecordMediumWriteStatus _writeStatus;

    private GetMediaInfoResult(
        final NumberOfTracks nrTracks,
        final CurrentMediaDuration mediaDuration,
        final AVTransportURI currentURI,
        final AVTransportURIMetaData currentURIMetaData,
        final NextAVTransportURI nextURI,
        final NextAVTransportURIMetaData nextURIMetaData,
        final PlaybackStorageMedium playMedium,
        final RecordStorageMedium recordMedium,
        final RecordMediumWriteStatus writeStatus
    ) {
        _nrTracks = nrTracks;
        _mediaDuration = mediaDuration;
        _currentURI = currentURI;
        _currentURIMetaData = currentURIMetaData;
        _nextURI = nextURI;
        _nextURIMetaData = nextURIMetaData;
        _playMedium = playMedium;
        _recordMedium = recordMedium;
        _writeStatus = writeStatus;
    } 

    public static GetMediaInfoResult getInstance(
        final NumberOfTracks nrTracks,
        final CurrentMediaDuration mediaDuration,
        final AVTransportURI currentURI,
        final AVTransportURIMetaData currentURIMetaData,
        final NextAVTransportURI nextURI,
        final NextAVTransportURIMetaData nextURIMetaData,
        final PlaybackStorageMedium playMedium,
        final RecordStorageMedium recordMedium,
        final RecordMediumWriteStatus writeStatus
    ) {
        return new GetMediaInfoResult(nrTracks, mediaDuration, currentURI, currentURIMetaData, nextURI, nextURIMetaData, playMedium, recordMedium, writeStatus);
    } 
    public NumberOfTracks getNrTracks() {
        return _nrTracks;
    }
    public CurrentMediaDuration getMediaDuration() {
        return _mediaDuration;
    }
    public AVTransportURI getCurrentURI() {
        return _currentURI;
    }
    public AVTransportURIMetaData getCurrentURIMetaData() {
        return _currentURIMetaData;
    }
    public NextAVTransportURI getNextURI() {
        return _nextURI;
    }
    public NextAVTransportURIMetaData getNextURIMetaData() {
        return _nextURIMetaData;
    }
    public PlaybackStorageMedium getPlayMedium() {
        return _playMedium;
    }
    public RecordStorageMedium getRecordMedium() {
        return _recordMedium;
    }
    public RecordMediumWriteStatus getWriteStatus() {
        return _writeStatus;
    }

    public String toString() {
        return Objects.toStringHelper(this)
        .add("nrTracks", _nrTracks)
        .add("mediaDuration", _mediaDuration)
        .add("currentURI", _currentURI)
        .add("currentURIMetaData", _currentURIMetaData)
        .add("nextURI", _nextURI)
        .add("nextURIMetaData", _nextURIMetaData)
        .add("playMedium", _playMedium)
        .add("recordMedium", _recordMedium)
        .add("writeStatus", _writeStatus)
        .toString();
    }

    public int hashCode() {
        return Objects.hashCode(
            _nrTracks,
            _mediaDuration,
            _currentURI,
            _currentURIMetaData,
            _nextURI,
            _nextURIMetaData,
            _playMedium,
            _recordMedium,
            _writeStatus
        );
    }

    public boolean equals(Object other) {
        if (other instanceof GetMediaInfoResult) {
            GetMediaInfoResult obj = (GetMediaInfoResult)other;
            return 
                    Objects.equal(_nrTracks, obj._nrTracks) &&
                    Objects.equal(_mediaDuration, obj._mediaDuration) &&
                    Objects.equal(_currentURI, obj._currentURI) &&
                    Objects.equal(_currentURIMetaData, obj._currentURIMetaData) &&
                    Objects.equal(_nextURI, obj._nextURI) &&
                    Objects.equal(_nextURIMetaData, obj._nextURIMetaData) &&
                    Objects.equal(_playMedium, obj._playMedium) &&
                    Objects.equal(_recordMedium, obj._recordMedium) &&
                    Objects.equal(_writeStatus, obj._writeStatus) 
            ;
        }
        return false;
    }

}
